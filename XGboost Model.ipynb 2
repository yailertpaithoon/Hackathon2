1+1+1

{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "e0a5bc5a-0df7-4d42-9c1c-415776372e3e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import sklearn as sk\n",
    "import xgboost as xgb"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "daf9a0c2-c243-4222-9a18-6769d53861a3",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import balanced_accuracy_score\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "from sklearn.metrics import confusion_matrix\n",
    "from sklearn.metrics import ConfusionMatrixDisplay\n",
    "from sklearn.metrics import roc_auc_score\n",
    "#from xgboost import early_stopping"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "57cf0cc1-fb81-4c05-a2db-fd3fab138b42",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('farmer_data_set.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "1c652c5f-414a-4d9d-8ebb-7d432edd9bb0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>id</th>\n",
       "      <th>id_number</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>education</th>\n",
       "      <th>status</th>\n",
       "      <th>start years</th>\n",
       "      <th>year_experience</th>\n",
       "      <th>crops</th>\n",
       "      <th>...</th>\n",
       "      <th>loan_status</th>\n",
       "      <th>saving/year</th>\n",
       "      <th>addr_subdist</th>\n",
       "      <th>addr_district</th>\n",
       "      <th>addr_province</th>\n",
       "      <th>zip_code</th>\n",
       "      <th>climate</th>\n",
       "      <th>credit_score</th>\n",
       "      <th>credit_utilization</th>\n",
       "      <th>credit_inquiry</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>7.100000e+12</td>\n",
       "      <td>937</td>\n",
       "      <td>59</td>\n",
       "      <td>Male</td>\n",
       "      <td>Primary School</td>\n",
       "      <td>Married</td>\n",
       "      <td>30</td>\n",
       "      <td>29</td>\n",
       "      <td>sugar cane</td>\n",
       "      <td>...</td>\n",
       "      <td>Fully Paid</td>\n",
       "      <td>132,700.00</td>\n",
       "      <td>??????????????</td>\n",
       "      <td>??????????????</td>\n",
       "      <td>?????????</td>\n",
       "      <td>71260</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>7.100000e+12</td>\n",
       "      <td>195</td>\n",
       "      <td>34</td>\n",
       "      <td>Male</td>\n",
       "      <td>Secondary School</td>\n",
       "      <td>Never Married</td>\n",
       "      <td>24</td>\n",
       "      <td>10</td>\n",
       "      <td>sugar cane</td>\n",
       "      <td>...</td>\n",
       "      <td>Charged Off</td>\n",
       "      <td>127,800.00</td>\n",
       "      <td>???????</td>\n",
       "      <td>???????</td>\n",
       "      <td>?????????</td>\n",
       "      <td>71210</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>7.100000e+12</td>\n",
       "      <td>187</td>\n",
       "      <td>61</td>\n",
       "      <td>Male</td>\n",
       "      <td>Secondary School</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>23</td>\n",
       "      <td>38</td>\n",
       "      <td>rice</td>\n",
       "      <td>...</td>\n",
       "      <td>Fully Paid</td>\n",
       "      <td>133,700.00</td>\n",
       "      <td>???????</td>\n",
       "      <td>???????</td>\n",
       "      <td>?????????</td>\n",
       "      <td>71110</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>4.600000e+12</td>\n",
       "      <td>628</td>\n",
       "      <td>46</td>\n",
       "      <td>Male</td>\n",
       "      <td>Primary School</td>\n",
       "      <td>Married</td>\n",
       "      <td>29</td>\n",
       "      <td>17</td>\n",
       "      <td>rice</td>\n",
       "      <td>...</td>\n",
       "      <td>Fully Paid</td>\n",
       "      <td>56,700.00</td>\n",
       "      <td>??????</td>\n",
       "      <td>???????????</td>\n",
       "      <td>?????????</td>\n",
       "      <td>46110</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>4.600000e+12</td>\n",
       "      <td>1140</td>\n",
       "      <td>65</td>\n",
       "      <td>Male</td>\n",
       "      <td>Secondary School</td>\n",
       "      <td>Separated</td>\n",
       "      <td>21</td>\n",
       "      <td>44</td>\n",
       "      <td>rice</td>\n",
       "      <td>...</td>\n",
       "      <td>Current</td>\n",
       "      <td>54,200.00</td>\n",
       "      <td>??????????????</td>\n",
       "      <td>?????</td>\n",
       "      <td>?????????</td>\n",
       "      <td>46160</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0            id  id_number  age gender         education  \\\n",
       "0           1  7.100000e+12        937   59   Male    Primary School   \n",
       "1           2  7.100000e+12        195   34   Male  Secondary School   \n",
       "2           3  7.100000e+12        187   61   Male  Secondary School   \n",
       "3           4  4.600000e+12        628   46   Male    Primary School   \n",
       "4           5  4.600000e+12       1140   65   Male  Secondary School   \n",
       "\n",
       "          status  start years  year_experience       crops  ...  loan_status  \\\n",
       "0        Married           30               29  sugar cane  ...   Fully Paid   \n",
       "1  Never Married           24               10  sugar cane  ...  Charged Off   \n",
       "2       Divorced           23               38        rice  ...   Fully Paid   \n",
       "3        Married           29               17        rice  ...   Fully Paid   \n",
       "4      Separated           21               44        rice  ...      Current   \n",
       "\n",
       "   saving/year    addr_subdist   addr_district  addr_province  zip_code  \\\n",
       "0   132,700.00  ??????????????  ??????????????      ?????????     71260   \n",
       "1   127,800.00         ???????         ???????      ?????????     71210   \n",
       "2   133,700.00         ???????         ???????      ?????????     71110   \n",
       "3    56,700.00          ??????     ???????????      ?????????     46110   \n",
       "4    54,200.00  ??????????????           ?????      ?????????     46160   \n",
       "\n",
       "  climate credit_score credit_utilization credit_inquiry  \n",
       "0     NaN          NaN                NaN            NaN  \n",
       "1     NaN          NaN                NaN            NaN  \n",
       "2     NaN          NaN                NaN            NaN  \n",
       "3     NaN          NaN                NaN            NaN  \n",
       "4     NaN          NaN                NaN            NaN  \n",
       "\n",
       "[5 rows x 32 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e0bb7ee2-1a92-40e4-afdd-50755c0c8260",
   "metadata": {},
   "source": [
    "### Dropping columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "9529878a-2185-4eb0-9018-af6cacf9b284",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(['Unnamed: 0', 'id', 'id_number', 'addr_subdist', 'Ngan', 'wa2', 'addr_district', 'addr_province', 'climate', 'credit_score', 'credit_utilization', 'credit_inquiry', 'irregation'], axis = 1, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "4d6589fd-e2df-423e-914c-2f674df0f4ef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>education</th>\n",
       "      <th>status</th>\n",
       "      <th>start years</th>\n",
       "      <th>year_experience</th>\n",
       "      <th>crops</th>\n",
       "      <th>farm_size_rai</th>\n",
       "      <th>soil_quality</th>\n",
       "      <th>yield (kg/rai)</th>\n",
       "      <th>yield (ton)</th>\n",
       "      <th>mkt_price (THB/ton)</th>\n",
       "      <th>annual_income</th>\n",
       "      <th>cost_ton</th>\n",
       "      <th>annual_expense</th>\n",
       "      <th>existing_loan</th>\n",
       "      <th>loan_status</th>\n",
       "      <th>saving/year</th>\n",
       "      <th>zip_code</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>59</td>\n",
       "      <td>Male</td>\n",
       "      <td>Primary School</td>\n",
       "      <td>Married</td>\n",
       "      <td>30</td>\n",
       "      <td>29</td>\n",
       "      <td>sugar cane</td>\n",
       "      <td>30</td>\n",
       "      <td>N</td>\n",
       "      <td>10730.00</td>\n",
       "      <td>332.07</td>\n",
       "      <td>1,165.82</td>\n",
       "      <td>387,129.68</td>\n",
       "      <td>1,122.00</td>\n",
       "      <td>372,578.53</td>\n",
       "      <td>62,500.00</td>\n",
       "      <td>Fully Paid</td>\n",
       "      <td>132,700.00</td>\n",
       "      <td>71260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>34</td>\n",
       "      <td>Male</td>\n",
       "      <td>Secondary School</td>\n",
       "      <td>Never Married</td>\n",
       "      <td>24</td>\n",
       "      <td>10</td>\n",
       "      <td>sugar cane</td>\n",
       "      <td>48</td>\n",
       "      <td>S3</td>\n",
       "      <td>10730.00</td>\n",
       "      <td>523.38</td>\n",
       "      <td>1,165.82</td>\n",
       "      <td>610,169.59</td>\n",
       "      <td>1,122.00</td>\n",
       "      <td>587,234.98</td>\n",
       "      <td>180,400.00</td>\n",
       "      <td>Charged Off</td>\n",
       "      <td>127,800.00</td>\n",
       "      <td>71210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>61</td>\n",
       "      <td>Male</td>\n",
       "      <td>Secondary School</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>23</td>\n",
       "      <td>38</td>\n",
       "      <td>rice</td>\n",
       "      <td>105</td>\n",
       "      <td>N</td>\n",
       "      <td>604.49</td>\n",
       "      <td>63.77</td>\n",
       "      <td>10,702.24</td>\n",
       "      <td>682,439.69</td>\n",
       "      <td>8,934.00</td>\n",
       "      <td>569,685.99</td>\n",
       "      <td>155,700.00</td>\n",
       "      <td>Fully Paid</td>\n",
       "      <td>133,700.00</td>\n",
       "      <td>71110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>46</td>\n",
       "      <td>Male</td>\n",
       "      <td>Primary School</td>\n",
       "      <td>Married</td>\n",
       "      <td>29</td>\n",
       "      <td>17</td>\n",
       "      <td>rice</td>\n",
       "      <td>64</td>\n",
       "      <td>S3</td>\n",
       "      <td>372.54</td>\n",
       "      <td>24.16</td>\n",
       "      <td>10,702.24</td>\n",
       "      <td>258,573.28</td>\n",
       "      <td>8,934.00</td>\n",
       "      <td>215,851.42</td>\n",
       "      <td>81,800.00</td>\n",
       "      <td>Fully Paid</td>\n",
       "      <td>56,700.00</td>\n",
       "      <td>46110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>65</td>\n",
       "      <td>Male</td>\n",
       "      <td>Secondary School</td>\n",
       "      <td>Separated</td>\n",
       "      <td>21</td>\n",
       "      <td>44</td>\n",
       "      <td>rice</td>\n",
       "      <td>81</td>\n",
       "      <td>S3</td>\n",
       "      <td>372.54</td>\n",
       "      <td>30.36</td>\n",
       "      <td>10,702.24</td>\n",
       "      <td>324,876.85</td>\n",
       "      <td>8,934.00</td>\n",
       "      <td>271,200.21</td>\n",
       "      <td>108,600.00</td>\n",
       "      <td>Current</td>\n",
       "      <td>54,200.00</td>\n",
       "      <td>46160</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   age gender         education         status  start years  year_experience  \\\n",
       "0   59   Male    Primary School        Married           30               29   \n",
       "1   34   Male  Secondary School  Never Married           24               10   \n",
       "2   61   Male  Secondary School       Divorced           23               38   \n",
       "3   46   Male    Primary School        Married           29               17   \n",
       "4   65   Male  Secondary School      Separated           21               44   \n",
       "\n",
       "        crops  farm_size_rai soil_quality  yield (kg/rai)  yield (ton)  \\\n",
       "0  sugar cane             30            N        10730.00       332.07   \n",
       "1  sugar cane             48           S3        10730.00       523.38   \n",
       "2        rice            105            N          604.49        63.77   \n",
       "3        rice             64           S3          372.54        24.16   \n",
       "4        rice             81           S3          372.54        30.36   \n",
       "\n",
       "  mkt_price (THB/ton) annual_income  cost_ton annual_expense existing_loan  \\\n",
       "0            1,165.82    387,129.68  1,122.00     372,578.53     62,500.00   \n",
       "1            1,165.82    610,169.59  1,122.00     587,234.98    180,400.00   \n",
       "2           10,702.24    682,439.69  8,934.00     569,685.99    155,700.00   \n",
       "3           10,702.24    258,573.28  8,934.00     215,851.42     81,800.00   \n",
       "4           10,702.24    324,876.85  8,934.00     271,200.21    108,600.00   \n",
       "\n",
       "   loan_status saving/year  zip_code  \n",
       "0   Fully Paid  132,700.00     71260  \n",
       "1  Charged Off  127,800.00     71210  \n",
       "2   Fully Paid  133,700.00     71110  \n",
       "3   Fully Paid   56,700.00     46110  \n",
       "4      Current   54,200.00     46160  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b3958757-c671-415b-8bbf-04ffa4846e7f",
   "metadata": {},
   "source": [
    "### Checking for unique value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "f31999ff-9949-4bf8-936b-ab0b5392f05d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Primary School', 'Secondary School', 'Bachelor Degree',\n",
       "       'Master Degree'], dtype=object)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['education'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "58be39e4-a642-48d6-bafe-ff58f98b6eb8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Married', 'Never Married', 'Divorced', 'Separated'], dtype=object)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['status'].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "69b39fe5-9993-45a3-9945-9c7afedd12d0",
   "metadata": {},
   "source": [
    "### Fill blank space with '_'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "0a929126-e475-465a-9396-521236329c5f",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.replace(' ', '_', regex = True, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "b13e31aa-ca2d-4143-8e13-ceb0b0dd6dd6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>education</th>\n",
       "      <th>status</th>\n",
       "      <th>start years</th>\n",
       "      <th>year_experience</th>\n",
       "      <th>crops</th>\n",
       "      <th>farm_size_rai</th>\n",
       "      <th>soil_quality</th>\n",
       "      <th>yield (kg/rai)</th>\n",
       "      <th>yield (ton)</th>\n",
       "      <th>mkt_price (THB/ton)</th>\n",
       "      <th>annual_income</th>\n",
       "      <th>cost_ton</th>\n",
       "      <th>annual_expense</th>\n",
       "      <th>existing_loan</th>\n",
       "      <th>loan_status</th>\n",
       "      <th>saving/year</th>\n",
       "      <th>zip_code</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>59</td>\n",
       "      <td>Male</td>\n",
       "      <td>Primary_School</td>\n",
       "      <td>Married</td>\n",
       "      <td>30</td>\n",
       "      <td>29</td>\n",
       "      <td>sugar_cane</td>\n",
       "      <td>30</td>\n",
       "      <td>N</td>\n",
       "      <td>10730.00</td>\n",
       "      <td>332.07</td>\n",
       "      <td>1,165.82</td>\n",
       "      <td>387,129.68</td>\n",
       "      <td>1,122.00</td>\n",
       "      <td>372,578.53</td>\n",
       "      <td>62,500.00</td>\n",
       "      <td>Fully_Paid</td>\n",
       "      <td>132,700.00</td>\n",
       "      <td>71260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>34</td>\n",
       "      <td>Male</td>\n",
       "      <td>Secondary_School</td>\n",
       "      <td>Never_Married</td>\n",
       "      <td>24</td>\n",
       "      <td>10</td>\n",
       "      <td>sugar_cane</td>\n",
       "      <td>48</td>\n",
       "      <td>S3</td>\n",
       "      <td>10730.00</td>\n",
       "      <td>523.38</td>\n",
       "      <td>1,165.82</td>\n",
       "      <td>610,169.59</td>\n",
       "      <td>1,122.00</td>\n",
       "      <td>587,234.98</td>\n",
       "      <td>180,400.00</td>\n",
       "      <td>Charged_Off</td>\n",
       "      <td>127,800.00</td>\n",
       "      <td>71210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>61</td>\n",
       "      <td>Male</td>\n",
       "      <td>Secondary_School</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>23</td>\n",
       "      <td>38</td>\n",
       "      <td>rice</td>\n",
       "      <td>105</td>\n",
       "      <td>N</td>\n",
       "      <td>604.49</td>\n",
       "      <td>63.77</td>\n",
       "      <td>10,702.24</td>\n",
       "      <td>682,439.69</td>\n",
       "      <td>8,934.00</td>\n",
       "      <td>569,685.99</td>\n",
       "      <td>155,700.00</td>\n",
       "      <td>Fully_Paid</td>\n",
       "      <td>133,700.00</td>\n",
       "      <td>71110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>46</td>\n",
       "      <td>Male</td>\n",
       "      <td>Primary_School</td>\n",
       "      <td>Married</td>\n",
       "      <td>29</td>\n",
       "      <td>17</td>\n",
       "      <td>rice</td>\n",
       "      <td>64</td>\n",
       "      <td>S3</td>\n",
       "      <td>372.54</td>\n",
       "      <td>24.16</td>\n",
       "      <td>10,702.24</td>\n",
       "      <td>258,573.28</td>\n",
       "      <td>8,934.00</td>\n",
       "      <td>215,851.42</td>\n",
       "      <td>81,800.00</td>\n",
       "      <td>Fully_Paid</td>\n",
       "      <td>56,700.00</td>\n",
       "      <td>46110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>65</td>\n",
       "      <td>Male</td>\n",
       "      <td>Secondary_School</td>\n",
       "      <td>Separated</td>\n",
       "      <td>21</td>\n",
       "      <td>44</td>\n",
       "      <td>rice</td>\n",
       "      <td>81</td>\n",
       "      <td>S3</td>\n",
       "      <td>372.54</td>\n",
       "      <td>30.36</td>\n",
       "      <td>10,702.24</td>\n",
       "      <td>324,876.85</td>\n",
       "      <td>8,934.00</td>\n",
       "      <td>271,200.21</td>\n",
       "      <td>108,600.00</td>\n",
       "      <td>Current</td>\n",
       "      <td>54,200.00</td>\n",
       "      <td>46160</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   age gender         education         status  start years  year_experience  \\\n",
       "0   59   Male    Primary_School        Married           30               29   \n",
       "1   34   Male  Secondary_School  Never_Married           24               10   \n",
       "2   61   Male  Secondary_School       Divorced           23               38   \n",
       "3   46   Male    Primary_School        Married           29               17   \n",
       "4   65   Male  Secondary_School      Separated           21               44   \n",
       "\n",
       "        crops  farm_size_rai soil_quality  yield (kg/rai)  yield (ton)  \\\n",
       "0  sugar_cane             30            N        10730.00       332.07   \n",
       "1  sugar_cane             48           S3        10730.00       523.38   \n",
       "2        rice            105            N          604.49        63.77   \n",
       "3        rice             64           S3          372.54        24.16   \n",
       "4        rice             81           S3          372.54        30.36   \n",
       "\n",
       "  mkt_price (THB/ton) annual_income  cost_ton annual_expense existing_loan  \\\n",
       "0            1,165.82    387,129.68  1,122.00     372,578.53     62,500.00   \n",
       "1            1,165.82    610,169.59  1,122.00     587,234.98    180,400.00   \n",
       "2           10,702.24    682,439.69  8,934.00     569,685.99    155,700.00   \n",
       "3           10,702.24    258,573.28  8,934.00     215,851.42     81,800.00   \n",
       "4           10,702.24    324,876.85  8,934.00     271,200.21    108,600.00   \n",
       "\n",
       "   loan_status saving/year  zip_code  \n",
       "0   Fully_Paid  132,700.00     71260  \n",
       "1  Charged_Off  127,800.00     71210  \n",
       "2   Fully_Paid  133,700.00     71110  \n",
       "3   Fully_Paid   56,700.00     46110  \n",
       "4      Current   54,200.00     46160  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "f9f3e715-e167-4837-946f-461bfb908e4e",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.columns = df.columns.str.replace(' ', '_')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "cb54bbb0-2ff2-4535-b4d2-9176a7cdd49f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>education</th>\n",
       "      <th>status</th>\n",
       "      <th>start_years</th>\n",
       "      <th>year_experience</th>\n",
       "      <th>crops</th>\n",
       "      <th>farm_size_rai</th>\n",
       "      <th>soil_quality</th>\n",
       "      <th>yield_(kg/rai)</th>\n",
       "      <th>yield_(ton)</th>\n",
       "      <th>mkt_price_(THB/ton)</th>\n",
       "      <th>annual_income</th>\n",
       "      <th>cost_ton</th>\n",
       "      <th>annual_expense</th>\n",
       "      <th>existing_loan</th>\n",
       "      <th>loan_status</th>\n",
       "      <th>saving/year</th>\n",
       "      <th>zip_code</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>59</td>\n",
       "      <td>Male</td>\n",
       "      <td>Primary_School</td>\n",
       "      <td>Married</td>\n",
       "      <td>30</td>\n",
       "      <td>29</td>\n",
       "      <td>sugar_cane</td>\n",
       "      <td>30</td>\n",
       "      <td>N</td>\n",
       "      <td>10730.00</td>\n",
       "      <td>332.07</td>\n",
       "      <td>1,165.82</td>\n",
       "      <td>387,129.68</td>\n",
       "      <td>1,122.00</td>\n",
       "      <td>372,578.53</td>\n",
       "      <td>62,500.00</td>\n",
       "      <td>Fully_Paid</td>\n",
       "      <td>132,700.00</td>\n",
       "      <td>71260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>34</td>\n",
       "      <td>Male</td>\n",
       "      <td>Secondary_School</td>\n",
       "      <td>Never_Married</td>\n",
       "      <td>24</td>\n",
       "      <td>10</td>\n",
       "      <td>sugar_cane</td>\n",
       "      <td>48</td>\n",
       "      <td>S3</td>\n",
       "      <td>10730.00</td>\n",
       "      <td>523.38</td>\n",
       "      <td>1,165.82</td>\n",
       "      <td>610,169.59</td>\n",
       "      <td>1,122.00</td>\n",
       "      <td>587,234.98</td>\n",
       "      <td>180,400.00</td>\n",
       "      <td>Charged_Off</td>\n",
       "      <td>127,800.00</td>\n",
       "      <td>71210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>61</td>\n",
       "      <td>Male</td>\n",
       "      <td>Secondary_School</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>23</td>\n",
       "      <td>38</td>\n",
       "      <td>rice</td>\n",
       "      <td>105</td>\n",
       "      <td>N</td>\n",
       "      <td>604.49</td>\n",
       "      <td>63.77</td>\n",
       "      <td>10,702.24</td>\n",
       "      <td>682,439.69</td>\n",
       "      <td>8,934.00</td>\n",
       "      <td>569,685.99</td>\n",
       "      <td>155,700.00</td>\n",
       "      <td>Fully_Paid</td>\n",
       "      <td>133,700.00</td>\n",
       "      <td>71110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>46</td>\n",
       "      <td>Male</td>\n",
       "      <td>Primary_School</td>\n",
       "      <td>Married</td>\n",
       "      <td>29</td>\n",
       "      <td>17</td>\n",
       "      <td>rice</td>\n",
       "      <td>64</td>\n",
       "      <td>S3</td>\n",
       "      <td>372.54</td>\n",
       "      <td>24.16</td>\n",
       "      <td>10,702.24</td>\n",
       "      <td>258,573.28</td>\n",
       "      <td>8,934.00</td>\n",
       "      <td>215,851.42</td>\n",
       "      <td>81,800.00</td>\n",
       "      <td>Fully_Paid</td>\n",
       "      <td>56,700.00</td>\n",
       "      <td>46110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>65</td>\n",
       "      <td>Male</td>\n",
       "      <td>Secondary_School</td>\n",
       "      <td>Separated</td>\n",
       "      <td>21</td>\n",
       "      <td>44</td>\n",
       "      <td>rice</td>\n",
       "      <td>81</td>\n",
       "      <td>S3</td>\n",
       "      <td>372.54</td>\n",
       "      <td>30.36</td>\n",
       "      <td>10,702.24</td>\n",
       "      <td>324,876.85</td>\n",
       "      <td>8,934.00</td>\n",
       "      <td>271,200.21</td>\n",
       "      <td>108,600.00</td>\n",
       "      <td>Current</td>\n",
       "      <td>54,200.00</td>\n",
       "      <td>46160</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   age gender         education         status  start_years  year_experience  \\\n",
       "0   59   Male    Primary_School        Married           30               29   \n",
       "1   34   Male  Secondary_School  Never_Married           24               10   \n",
       "2   61   Male  Secondary_School       Divorced           23               38   \n",
       "3   46   Male    Primary_School        Married           29               17   \n",
       "4   65   Male  Secondary_School      Separated           21               44   \n",
       "\n",
       "        crops  farm_size_rai soil_quality  yield_(kg/rai)  yield_(ton)  \\\n",
       "0  sugar_cane             30            N        10730.00       332.07   \n",
       "1  sugar_cane             48           S3        10730.00       523.38   \n",
       "2        rice            105            N          604.49        63.77   \n",
       "3        rice             64           S3          372.54        24.16   \n",
       "4        rice             81           S3          372.54        30.36   \n",
       "\n",
       "  mkt_price_(THB/ton) annual_income  cost_ton annual_expense existing_loan  \\\n",
       "0            1,165.82    387,129.68  1,122.00     372,578.53     62,500.00   \n",
       "1            1,165.82    610,169.59  1,122.00     587,234.98    180,400.00   \n",
       "2           10,702.24    682,439.69  8,934.00     569,685.99    155,700.00   \n",
       "3           10,702.24    258,573.28  8,934.00     215,851.42     81,800.00   \n",
       "4           10,702.24    324,876.85  8,934.00     271,200.21    108,600.00   \n",
       "\n",
       "   loan_status saving/year  zip_code  \n",
       "0   Fully_Paid  132,700.00     71260  \n",
       "1  Charged_Off  127,800.00     71210  \n",
       "2   Fully_Paid  133,700.00     71110  \n",
       "3   Fully_Paid   56,700.00     46110  \n",
       "4      Current   54,200.00     46160  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d11bac7-494b-498f-acb2-f352206cb04b",
   "metadata": {},
   "source": [
    "### Missing Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "06dcc656-6681-49e2-9175-b584e158cd5c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "age                      int64\n",
       "gender                  object\n",
       "education               object\n",
       "status                  object\n",
       "start_years              int64\n",
       "year_experience          int64\n",
       "crops                   object\n",
       "farm_size_rai            int64\n",
       "soil_quality            object\n",
       "yield_(kg/rai)         float64\n",
       "yield_(ton)            float64\n",
       "mkt_price_(THB/ton)     object\n",
       "annual_income           object\n",
       "cost_ton                object\n",
       "annual_expense          object\n",
       "existing_loan           object\n",
       "loan_status             object\n",
       "saving/year             object\n",
       "zip_code                 int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1843e5d8-ef1b-4431-9c32-6d5076950668",
   "metadata": {},
   "source": [
    "#### mkt_price_(THB/ton)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "f95b9661-f403-4daf-bf51-58a652742cb4",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['mkt_price_(THB/ton)'] = df['mkt_price_(THB/ton)'].str.replace(',', '')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "f026c6b0-bce0-441e-810f-7ecac568723b",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['mkt_price_(THB/ton)'] = pd.to_numeric(df['mkt_price_(THB/ton)'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "58e7c4fa-4f51-47c2-afa7-c9d96a896585",
   "metadata": {},
   "source": [
    "#### annual_income"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "e3cd8ae6-dc64-4693-807e-d3ea7de2a774",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['annual_income'] = df['annual_income'].str.replace(',', '')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "62d40e05-d33a-4a83-9df4-e687b5e8236d",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['annual_income'] = pd.to_numeric(df['annual_income'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "23a7a33a-bdc5-433d-b3ab-041b6709f176",
   "metadata": {},
   "source": [
    "#### Cost_ton"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "28f262cd-0df7-4157-9454-53b790ce792d",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['cost_ton'] = df['cost_ton'].str.replace(',', '')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "22d5ae46-912b-43b9-a8d8-7fca397214ff",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['cost_ton'] = pd.to_numeric(df['cost_ton'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "16578622-6045-468f-93e2-e369318974f5",
   "metadata": {},
   "source": [
    "#### annuannual_expense"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "db03c68d-9ccc-4819-9d5d-943de1cae117",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['372,578.53', '587,234.98', '569,685.99', '215,851.42',\n",
       "       '271,200.21', '137,336.92', '378,272.51', '110,773.13',\n",
       "       '276,539.38', '76,885.20', '100,778.86', '468,940.68',\n",
       "       '792,250.85', '393,179.98', '365,595.69', '1,302,372.94',\n",
       "       '752,141.68', '145,709.82', '93,181.90', '277,430.96',\n",
       "       '221,485.74', '307,035.78', '232,425.02', '743,282.59', nan,\n",
       "       '232,092.79', '251,241.32', '95,682.65', '116,217.00',\n",
       "       '1,932,909.82', '1,378,212.67', '156,625.06', '413,025.88',\n",
       "       '126,963.40', '159,494.51', '492,443.89', '1,138,266.03',\n",
       "       '1,396,247.98', '145,612.82', '165,290.46', '276,532.47',\n",
       "       '991,402.25', '513,410.26', '342,029.79', '489,319.14',\n",
       "       '813,831.10', '311,487.97', '413,321.60', '807,195.89',\n",
       "       '1,972,171.19', '1,415,999.08', '1,164,414.24', '590,343.45',\n",
       "       '553,359.21', '530,116.52', '450,619.52', '319,183.72',\n",
       "       '150,320.90', '174,041.74', '202,119.82', '369,951.93',\n",
       "       '216,725.97', '297,050.70', '155,789.04', '1,499,362.63',\n",
       "       '245,525.81', '203,788.01', '305,578.55', '212,587.09',\n",
       "       '118,014.17', '116,069.81', '280,608.48', '253,595.78',\n",
       "       '358,471.27', '470,558.97', '564,407.34', '328,880.46',\n",
       "       '143,140.72', '180,398.83', '253,505.67', '105,704.99',\n",
       "       '185,339.63', '172,923.17', '199,625.00', '220,942.33',\n",
       "       '1,471,232.58', '323,415.95', '493,927.50', '815,782.72',\n",
       "       '702,003.73', '336,911.16', '346,394.10', '366,019.34',\n",
       "       '192,398.29', '142,440.51', '183,599.31'], dtype=object)"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['annual_expense'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "3b2548da-337a-4b23-aa30-113e7af650e2",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['annual_expense'] = df['annual_expense'].str.replace(',', '')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "cb01148a-cb8e-400c-ae27-dc03083a3473",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['annual_expense'] = pd.to_numeric(df['annual_expense'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6346e5be-8782-4590-8f5f-654b51960f42",
   "metadata": {},
   "source": [
    "#### Existing_loan"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "bef373d0-0d59-4666-b21c-b67910decc5c",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['62,500.00', '180,400.00', '155,700.00', '81,800.00', '108,600.00',\n",
       "       '68,800.00', '101,200.00', '66,300.00', '43,000.00', '38,800.00',\n",
       "       '42,300.00', '284,800.00', '252,300.00', '194,700.00',\n",
       "       '190,400.00', '198,000.00', '172,900.00', '76,500.00', '69,100.00',\n",
       "       '163,500.00', '153,300.00', '66,200.00', '70,100.00', '12,000.00',\n",
       "       '118,300.00', '108,100.00', '112,200.00', '179,700.00',\n",
       "       '110,100.00', '69,700.00', '394,700.00', '460,800.00', '94,400.00',\n",
       "       '100,600.00', '53,200.00', '60,000.00', '144,100.00', '87,400.00',\n",
       "       '152,400.00', '78,100.00', '65,700.00', '122,400.00', '200,900.00',\n",
       "       '30,800.00', '69,900.00', '67,200.00', '166,600.00', '73,300.00',\n",
       "       '50,500.00', '124,700.00', '422,800.00', '106,300.00', '37,200.00',\n",
       "       '198,400.00', '196,100.00', '21,600.00', '122,300.00', '58,100.00',\n",
       "       '129,000.00', '72,800.00', '71,900.00', '84,900.00', '162,000.00',\n",
       "       '96,000.00', '193,300.00', '148,500.00', '360,800.00', '41,800.00',\n",
       "       '84,500.00', '127,900.00', '154,800.00', '37,000.00', '68,200.00',\n",
       "       '161,700.00', '215,000.00', '284,100.00', '149,300.00',\n",
       "       '65,900.00', '150,300.00', '190,100.00', '84,200.00', '92,600.00',\n",
       "       '126,000.00', '125,400.00', '146,700.00', '361,600.00',\n",
       "       '169,900.00', '160,600.00', '150,400.00', '205,300.00',\n",
       "       '41,200.00', '63,000.00', '92,800.00', '128,500.00', '54,500.00',\n",
       "       '46,200.00'], dtype=object)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['existing_loan'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "9804f5c2-2d03-4501-b844-87c423ce061d",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['existing_loan'] = df['existing_loan'].str.replace(',', '')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "41905056-54f6-42aa-8d6b-fc07ced91b62",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['existing_loan'] = pd.to_numeric(df['existing_loan'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bec7662e-d95a-4e3b-8fd0-13cdb9827cce",
   "metadata": {},
   "source": [
    "#### saving/year"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "ddf47f95-e971-499e-9da1-d83096dc914c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['132,700.00', '127,800.00', '133,700.00', '56,700.00', '54,200.00',\n",
       "       '48,300.00', '47,600.00', '43,600.00', '54,900.00', '49,200.00',\n",
       "       '49,300.00', '130,100.00', '130,300.00', '128,300.00',\n",
       "       '134,300.00', '135,800.00', '44,500.00', '52,000.00', '97,300.00',\n",
       "       '37,500.00', '37,300.00', '47,300.00', '43,500.00', '48,900.00',\n",
       "       '49,900.00', '41,500.00', '51,400.00', '53,900.00', '51,600.00',\n",
       "       '54,600.00', '55,500.00', '53,300.00', '49,400.00', '146,300.00',\n",
       "       '42,900.00', '36,500.00', '38,900.00', '50,700.00', '57,500.00',\n",
       "       '47,100.00', '132,300.00', '43,300.00', '44,400.00', '51,300.00',\n",
       "       '50,600.00', '136,000.00', '45,900.00', '46,800.00', '47,700.00',\n",
       "       '40,100.00', '40,800.00', '50,000.00', '52,500.00', '52,600.00',\n",
       "       '48,600.00', '50,800.00', '135,700.00', '136,600.00', '130,400.00',\n",
       "       '37,800.00', '58,300.00', '52,700.00', '58,100.00', '58,700.00',\n",
       "       '39,700.00', '126,700.00', '132,500.00', '135,400.00', '58,500.00',\n",
       "       '55,700.00', '51,000.00', '56,200.00', '54,100.00', '50,200.00',\n",
       "       '58,800.00', '39,100.00', '44,800.00', '44,700.00', '49,800.00',\n",
       "       '41,200.00', '53,200.00', '49,600.00', '50,400.00', '55,800.00',\n",
       "       '48,200.00', '49,000.00'], dtype=object)"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['saving/year'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "4acd1f60-5db0-4f50-9891-a8d27d2847b7",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['saving/year'] = df['saving/year'].str.replace(',', '')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "1e751ea0-ffc1-4f24-b45b-a6a2d7078236",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['saving/year'] = pd.to_numeric(df['saving/year'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "782bfdc6-4391-461e-9d14-01b2a615493e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "age                      int64\n",
       "gender                  object\n",
       "education               object\n",
       "status                  object\n",
       "start_years              int64\n",
       "year_experience          int64\n",
       "crops                   object\n",
       "farm_size_rai            int64\n",
       "soil_quality            object\n",
       "yield_(kg/rai)         float64\n",
       "yield_(ton)            float64\n",
       "mkt_price_(THB/ton)    float64\n",
       "annual_income          float64\n",
       "cost_ton               float64\n",
       "annual_expense         float64\n",
       "existing_loan          float64\n",
       "loan_status             object\n",
       "saving/year            float64\n",
       "zip_code                 int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fc9efc43-443a-4e05-ba33-3611caedc862",
   "metadata": {},
   "source": [
    "# Splitting data into X and y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "abf32654-eae9-4bd8-90a7-5bd35aac502d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>education</th>\n",
       "      <th>status</th>\n",
       "      <th>start_years</th>\n",
       "      <th>year_experience</th>\n",
       "      <th>crops</th>\n",
       "      <th>farm_size_rai</th>\n",
       "      <th>soil_quality</th>\n",
       "      <th>yield_(kg/rai)</th>\n",
       "      <th>yield_(ton)</th>\n",
       "      <th>mkt_price_(THB/ton)</th>\n",
       "      <th>annual_income</th>\n",
       "      <th>cost_ton</th>\n",
       "      <th>annual_expense</th>\n",
       "      <th>existing_loan</th>\n",
       "      <th>saving/year</th>\n",
       "      <th>zip_code</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>59</td>\n",
       "      <td>Male</td>\n",
       "      <td>Primary_School</td>\n",
       "      <td>Married</td>\n",
       "      <td>30</td>\n",
       "      <td>29</td>\n",
       "      <td>sugar_cane</td>\n",
       "      <td>30</td>\n",
       "      <td>N</td>\n",
       "      <td>10730.00</td>\n",
       "      <td>332.07</td>\n",
       "      <td>1165.82</td>\n",
       "      <td>387129.68</td>\n",
       "      <td>1122.0</td>\n",
       "      <td>372578.53</td>\n",
       "      <td>62500.0</td>\n",
       "      <td>132700.0</td>\n",
       "      <td>71260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>34</td>\n",
       "      <td>Male</td>\n",
       "      <td>Secondary_School</td>\n",
       "      <td>Never_Married</td>\n",
       "      <td>24</td>\n",
       "      <td>10</td>\n",
       "      <td>sugar_cane</td>\n",
       "      <td>48</td>\n",
       "      <td>S3</td>\n",
       "      <td>10730.00</td>\n",
       "      <td>523.38</td>\n",
       "      <td>1165.82</td>\n",
       "      <td>610169.59</td>\n",
       "      <td>1122.0</td>\n",
       "      <td>587234.98</td>\n",
       "      <td>180400.0</td>\n",
       "      <td>127800.0</td>\n",
       "      <td>71210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>61</td>\n",
       "      <td>Male</td>\n",
       "      <td>Secondary_School</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>23</td>\n",
       "      <td>38</td>\n",
       "      <td>rice</td>\n",
       "      <td>105</td>\n",
       "      <td>N</td>\n",
       "      <td>604.49</td>\n",
       "      <td>63.77</td>\n",
       "      <td>10702.24</td>\n",
       "      <td>682439.69</td>\n",
       "      <td>8934.0</td>\n",
       "      <td>569685.99</td>\n",
       "      <td>155700.0</td>\n",
       "      <td>133700.0</td>\n",
       "      <td>71110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>46</td>\n",
       "      <td>Male</td>\n",
       "      <td>Primary_School</td>\n",
       "      <td>Married</td>\n",
       "      <td>29</td>\n",
       "      <td>17</td>\n",
       "      <td>rice</td>\n",
       "      <td>64</td>\n",
       "      <td>S3</td>\n",
       "      <td>372.54</td>\n",
       "      <td>24.16</td>\n",
       "      <td>10702.24</td>\n",
       "      <td>258573.28</td>\n",
       "      <td>8934.0</td>\n",
       "      <td>215851.42</td>\n",
       "      <td>81800.0</td>\n",
       "      <td>56700.0</td>\n",
       "      <td>46110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>65</td>\n",
       "      <td>Male</td>\n",
       "      <td>Secondary_School</td>\n",
       "      <td>Separated</td>\n",
       "      <td>21</td>\n",
       "      <td>44</td>\n",
       "      <td>rice</td>\n",
       "      <td>81</td>\n",
       "      <td>S3</td>\n",
       "      <td>372.54</td>\n",
       "      <td>30.36</td>\n",
       "      <td>10702.24</td>\n",
       "      <td>324876.85</td>\n",
       "      <td>8934.0</td>\n",
       "      <td>271200.21</td>\n",
       "      <td>108600.0</td>\n",
       "      <td>54200.0</td>\n",
       "      <td>46160</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   age gender         education         status  start_years  year_experience  \\\n",
       "0   59   Male    Primary_School        Married           30               29   \n",
       "1   34   Male  Secondary_School  Never_Married           24               10   \n",
       "2   61   Male  Secondary_School       Divorced           23               38   \n",
       "3   46   Male    Primary_School        Married           29               17   \n",
       "4   65   Male  Secondary_School      Separated           21               44   \n",
       "\n",
       "        crops  farm_size_rai soil_quality  yield_(kg/rai)  yield_(ton)  \\\n",
       "0  sugar_cane             30            N        10730.00       332.07   \n",
       "1  sugar_cane             48           S3        10730.00       523.38   \n",
       "2        rice            105            N          604.49        63.77   \n",
       "3        rice             64           S3          372.54        24.16   \n",
       "4        rice             81           S3          372.54        30.36   \n",
       "\n",
       "   mkt_price_(THB/ton)  annual_income  cost_ton  annual_expense  \\\n",
       "0              1165.82      387129.68    1122.0       372578.53   \n",
       "1              1165.82      610169.59    1122.0       587234.98   \n",
       "2             10702.24      682439.69    8934.0       569685.99   \n",
       "3             10702.24      258573.28    8934.0       215851.42   \n",
       "4             10702.24      324876.85    8934.0       271200.21   \n",
       "\n",
       "   existing_loan  saving/year  zip_code  \n",
       "0        62500.0     132700.0     71260  \n",
       "1       180400.0     127800.0     71210  \n",
       "2       155700.0     133700.0     71110  \n",
       "3        81800.0      56700.0     46110  \n",
       "4       108600.0      54200.0     46160  "
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = df.drop('loan_status', axis = 1).copy()\n",
    "X.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "a7795ba4-038d-4216-9f93-8f6aea4dc507",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0     Fully_Paid\n",
       "1    Charged_Off\n",
       "2     Fully_Paid\n",
       "3     Fully_Paid\n",
       "4        Current\n",
       "Name: loan_status, dtype: object"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y = df['loan_status'].copy()\n",
    "y.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d06ce48a-57e2-4bb2-bc06-a84c7468f9f9",
   "metadata": {},
   "source": [
    "# Format Data (One-Hot Encoding)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bd9b19f8-eff9-45f6-a6c0-d71ce033926b",
   "metadata": {},
   "source": [
    "## Convert all object to only int, float, and boolean"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "036295c1-7745-4407-93f1-f7f85d68727d",
   "metadata": {},
   "source": [
    "#### Gender (from object to boolean) 1 for 'Male' and 0 for 'Female'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "8cd21233-8a48-4d99-96c6-59272e70f7f4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Male', 'Female'], dtype=object)"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X['gender'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "8a46f6ba-ace8-49c8-b74a-70ba49dc6475",
   "metadata": {},
   "outputs": [],
   "source": [
    "X['gender'] = X['gender'].map({'Male': 1, 'Female': 0})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "beba6b4a-a196-4846-8858-5f6cb0fa0a76",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>education</th>\n",
       "      <th>status</th>\n",
       "      <th>start_years</th>\n",
       "      <th>year_experience</th>\n",
       "      <th>crops</th>\n",
       "      <th>farm_size_rai</th>\n",
       "      <th>soil_quality</th>\n",
       "      <th>yield_(kg/rai)</th>\n",
       "      <th>yield_(ton)</th>\n",
       "      <th>mkt_price_(THB/ton)</th>\n",
       "      <th>annual_income</th>\n",
       "      <th>cost_ton</th>\n",
       "      <th>annual_expense</th>\n",
       "      <th>existing_loan</th>\n",
       "      <th>saving/year</th>\n",
       "      <th>zip_code</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>59</td>\n",
       "      <td>1</td>\n",
       "      <td>Primary_School</td>\n",
       "      <td>Married</td>\n",
       "      <td>30</td>\n",
       "      <td>29</td>\n",
       "      <td>sugar_cane</td>\n",
       "      <td>30</td>\n",
       "      <td>N</td>\n",
       "      <td>10730.00</td>\n",
       "      <td>332.07</td>\n",
       "      <td>1165.82</td>\n",
       "      <td>387129.68</td>\n",
       "      <td>1122.0</td>\n",
       "      <td>372578.53</td>\n",
       "      <td>62500.0</td>\n",
       "      <td>132700.0</td>\n",
       "      <td>71260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>34</td>\n",
       "      <td>1</td>\n",
       "      <td>Secondary_School</td>\n",
       "      <td>Never_Married</td>\n",
       "      <td>24</td>\n",
       "      <td>10</td>\n",
       "      <td>sugar_cane</td>\n",
       "      <td>48</td>\n",
       "      <td>S3</td>\n",
       "      <td>10730.00</td>\n",
       "      <td>523.38</td>\n",
       "      <td>1165.82</td>\n",
       "      <td>610169.59</td>\n",
       "      <td>1122.0</td>\n",
       "      <td>587234.98</td>\n",
       "      <td>180400.0</td>\n",
       "      <td>127800.0</td>\n",
       "      <td>71210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>61</td>\n",
       "      <td>1</td>\n",
       "      <td>Secondary_School</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>23</td>\n",
       "      <td>38</td>\n",
       "      <td>rice</td>\n",
       "      <td>105</td>\n",
       "      <td>N</td>\n",
       "      <td>604.49</td>\n",
       "      <td>63.77</td>\n",
       "      <td>10702.24</td>\n",
       "      <td>682439.69</td>\n",
       "      <td>8934.0</td>\n",
       "      <td>569685.99</td>\n",
       "      <td>155700.0</td>\n",
       "      <td>133700.0</td>\n",
       "      <td>71110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>46</td>\n",
       "      <td>1</td>\n",
       "      <td>Primary_School</td>\n",
       "      <td>Married</td>\n",
       "      <td>29</td>\n",
       "      <td>17</td>\n",
       "      <td>rice</td>\n",
       "      <td>64</td>\n",
       "      <td>S3</td>\n",
       "      <td>372.54</td>\n",
       "      <td>24.16</td>\n",
       "      <td>10702.24</td>\n",
       "      <td>258573.28</td>\n",
       "      <td>8934.0</td>\n",
       "      <td>215851.42</td>\n",
       "      <td>81800.0</td>\n",
       "      <td>56700.0</td>\n",
       "      <td>46110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>65</td>\n",
       "      <td>1</td>\n",
       "      <td>Secondary_School</td>\n",
       "      <td>Separated</td>\n",
       "      <td>21</td>\n",
       "      <td>44</td>\n",
       "      <td>rice</td>\n",
       "      <td>81</td>\n",
       "      <td>S3</td>\n",
       "      <td>372.54</td>\n",
       "      <td>30.36</td>\n",
       "      <td>10702.24</td>\n",
       "      <td>324876.85</td>\n",
       "      <td>8934.0</td>\n",
       "      <td>271200.21</td>\n",
       "      <td>108600.0</td>\n",
       "      <td>54200.0</td>\n",
       "      <td>46160</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   age  gender         education         status  start_years  year_experience  \\\n",
       "0   59       1    Primary_School        Married           30               29   \n",
       "1   34       1  Secondary_School  Never_Married           24               10   \n",
       "2   61       1  Secondary_School       Divorced           23               38   \n",
       "3   46       1    Primary_School        Married           29               17   \n",
       "4   65       1  Secondary_School      Separated           21               44   \n",
       "\n",
       "        crops  farm_size_rai soil_quality  yield_(kg/rai)  yield_(ton)  \\\n",
       "0  sugar_cane             30            N        10730.00       332.07   \n",
       "1  sugar_cane             48           S3        10730.00       523.38   \n",
       "2        rice            105            N          604.49        63.77   \n",
       "3        rice             64           S3          372.54        24.16   \n",
       "4        rice             81           S3          372.54        30.36   \n",
       "\n",
       "   mkt_price_(THB/ton)  annual_income  cost_ton  annual_expense  \\\n",
       "0              1165.82      387129.68    1122.0       372578.53   \n",
       "1              1165.82      610169.59    1122.0       587234.98   \n",
       "2             10702.24      682439.69    8934.0       569685.99   \n",
       "3             10702.24      258573.28    8934.0       215851.42   \n",
       "4             10702.24      324876.85    8934.0       271200.21   \n",
       "\n",
       "   existing_loan  saving/year  zip_code  \n",
       "0        62500.0     132700.0     71260  \n",
       "1       180400.0     127800.0     71210  \n",
       "2       155700.0     133700.0     71110  \n",
       "3        81800.0      56700.0     46110  \n",
       "4       108600.0      54200.0     46160  "
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "737631fc-8ca4-48e3-a54e-29a52a9695ac",
   "metadata": {},
   "source": [
    "### Education (from object to dummies)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "b38fd2d3-5031-4000-8f1b-33c00e01eb28",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "age                      int64\n",
       "gender                   int64\n",
       "education               object\n",
       "status                  object\n",
       "start_years              int64\n",
       "year_experience          int64\n",
       "crops                   object\n",
       "farm_size_rai            int64\n",
       "soil_quality            object\n",
       "yield_(kg/rai)         float64\n",
       "yield_(ton)            float64\n",
       "mkt_price_(THB/ton)    float64\n",
       "annual_income          float64\n",
       "cost_ton               float64\n",
       "annual_expense         float64\n",
       "existing_loan          float64\n",
       "saving/year            float64\n",
       "zip_code                 int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "5955cf90-9de8-459c-b954-f8f4dfa15606",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_Encoded = pd.get_dummies(X, columns=['education',\n",
    "                              'status',\n",
    "                              'crops',\n",
    "                              'soil_quality'], dtype = float)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "c0a0a15a-5164-44e1-9fda-c719192d4f6f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>start_years</th>\n",
       "      <th>year_experience</th>\n",
       "      <th>farm_size_rai</th>\n",
       "      <th>yield_(kg/rai)</th>\n",
       "      <th>yield_(ton)</th>\n",
       "      <th>mkt_price_(THB/ton)</th>\n",
       "      <th>annual_income</th>\n",
       "      <th>cost_ton</th>\n",
       "      <th>...</th>\n",
       "      <th>crops_cassava</th>\n",
       "      <th>crops_coffee</th>\n",
       "      <th>crops_corn</th>\n",
       "      <th>crops_pineaple</th>\n",
       "      <th>crops_rice</th>\n",
       "      <th>crops_sugar_cane</th>\n",
       "      <th>soil_quality_N</th>\n",
       "      <th>soil_quality_S1</th>\n",
       "      <th>soil_quality_S2</th>\n",
       "      <th>soil_quality_S3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>59</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>29</td>\n",
       "      <td>30</td>\n",
       "      <td>10730.00</td>\n",
       "      <td>332.07</td>\n",
       "      <td>1165.82</td>\n",
       "      <td>387129.68</td>\n",
       "      <td>1122.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>34</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>10</td>\n",
       "      <td>48</td>\n",
       "      <td>10730.00</td>\n",
       "      <td>523.38</td>\n",
       "      <td>1165.82</td>\n",
       "      <td>610169.59</td>\n",
       "      <td>1122.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>61</td>\n",
       "      <td>1</td>\n",
       "      <td>23</td>\n",
       "      <td>38</td>\n",
       "      <td>105</td>\n",
       "      <td>604.49</td>\n",
       "      <td>63.77</td>\n",
       "      <td>10702.24</td>\n",
       "      <td>682439.69</td>\n",
       "      <td>8934.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>46</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>17</td>\n",
       "      <td>64</td>\n",
       "      <td>372.54</td>\n",
       "      <td>24.16</td>\n",
       "      <td>10702.24</td>\n",
       "      <td>258573.28</td>\n",
       "      <td>8934.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>65</td>\n",
       "      <td>1</td>\n",
       "      <td>21</td>\n",
       "      <td>44</td>\n",
       "      <td>81</td>\n",
       "      <td>372.54</td>\n",
       "      <td>30.36</td>\n",
       "      <td>10702.24</td>\n",
       "      <td>324876.85</td>\n",
       "      <td>8934.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   age  gender  start_years  year_experience  farm_size_rai  yield_(kg/rai)  \\\n",
       "0   59       1           30               29             30        10730.00   \n",
       "1   34       1           24               10             48        10730.00   \n",
       "2   61       1           23               38            105          604.49   \n",
       "3   46       1           29               17             64          372.54   \n",
       "4   65       1           21               44             81          372.54   \n",
       "\n",
       "   yield_(ton)  mkt_price_(THB/ton)  annual_income  cost_ton  ...  \\\n",
       "0       332.07              1165.82      387129.68    1122.0  ...   \n",
       "1       523.38              1165.82      610169.59    1122.0  ...   \n",
       "2        63.77             10702.24      682439.69    8934.0  ...   \n",
       "3        24.16             10702.24      258573.28    8934.0  ...   \n",
       "4        30.36             10702.24      324876.85    8934.0  ...   \n",
       "\n",
       "   crops_cassava  crops_coffee  crops_corn  crops_pineaple  crops_rice  \\\n",
       "0            0.0           0.0         0.0             0.0         0.0   \n",
       "1            0.0           0.0         0.0             0.0         0.0   \n",
       "2            0.0           0.0         0.0             0.0         1.0   \n",
       "3            0.0           0.0         0.0             0.0         1.0   \n",
       "4            0.0           0.0         0.0             0.0         1.0   \n",
       "\n",
       "   crops_sugar_cane  soil_quality_N  soil_quality_S1  soil_quality_S2  \\\n",
       "0               1.0             1.0              0.0              0.0   \n",
       "1               1.0             0.0              0.0              0.0   \n",
       "2               0.0             1.0              0.0              0.0   \n",
       "3               0.0             0.0              0.0              0.0   \n",
       "4               0.0             0.0              0.0              0.0   \n",
       "\n",
       "   soil_quality_S3  \n",
       "0              0.0  \n",
       "1              1.0  \n",
       "2              0.0  \n",
       "3              1.0  \n",
       "4              1.0  \n",
       "\n",
       "[5 rows x 32 columns]"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_Encoded.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1820159f-ed5b-4184-9a96-89ee67e842fd",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "61090165-7869-4b19-a8ec-c4986d28808f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      Fully_Paid\n",
       "1     Charged_Off\n",
       "2      Fully_Paid\n",
       "3      Fully_Paid\n",
       "4         Current\n",
       "         ...     \n",
       "95     Fully_Paid\n",
       "96     Fully_Paid\n",
       "97     Fully_Paid\n",
       "98     Fully_Paid\n",
       "99     Fully_Paid\n",
       "Name: loan_status, Length: 100, dtype: object"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "d8e8b2f6-461e-43c8-9864-cc23e4d914d2",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_cleaned = y.map({\n",
    "    'Fully_Paid': 1,\n",
    "    'Current': 1,\n",
    "    'Charged_Off': 0,\n",
    "    'In_Grace_Period': 0\n",
    "})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "914308e1-87a3-4aba-b357-69a6529844d0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0     1\n",
      "1     0\n",
      "2     1\n",
      "3     1\n",
      "4     1\n",
      "     ..\n",
      "95    1\n",
      "96    1\n",
      "97    1\n",
      "98    1\n",
      "99    1\n",
      "Name: loan_status, Length: 100, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(y_cleaned)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "24550116-30d6-499e-9991-f1a12a53d00d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1, 0], dtype=int64)"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_cleaned.unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6e1e209d-2267-494f-b469-ea13cbd720bf",
   "metadata": {},
   "source": [
    "### Preliminary XGBoost Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "0182e967-c761-4bdc-8348-12184bdb92bb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.84"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Prob of Not Default\n",
    "sum(y_cleaned)/len(y_cleaned)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "1acf116d-98fb-4cf8-8602-07900c724cc2",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X_Encoded, y_cleaned, random_state = 42, stratify = y_cleaned)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "eca87ef8-c096-49d8-a6a7-29525c4f281e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.84"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sum(y_train)/len(y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "1b077691-64a0-49fd-80e6-bbff43af8722",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.84"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sum(y_test)/len(y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1119c264-d74c-4788-941a-9b762225fdd2",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2bf5ebe7-16e4-4f81-9b27-4ec0e3a081b4",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0f61adaf-8d76-441e-962e-650f8dcdbd0d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "002b617e-100d-49be-ac20-1da77c7b4dc2",
   "metadata": {},
   "outputs": [],
   "source": [
    "clf_xgb = xgb.XGBClassifier(\n",
    "    objective='binary:logistic', \n",
    "    seed=42, \n",
    "    eval_metric='aucpr', \n",
    "    early_stopping_rounds=10\n",
    ")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "30516d6e-3254-4c2d-ad84-795079ae9cee",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-aucpr:0.90182\n",
      "[1]\tvalidation_0-aucpr:0.90182\n",
      "[2]\tvalidation_0-aucpr:0.88285\n",
      "[3]\tvalidation_0-aucpr:0.88471\n",
      "[4]\tvalidation_0-aucpr:0.93397\n",
      "[5]\tvalidation_0-aucpr:0.92817\n",
      "[6]\tvalidation_0-aucpr:0.94914\n",
      "[7]\tvalidation_0-aucpr:0.94660\n",
      "[8]\tvalidation_0-aucpr:0.94671\n",
      "[9]\tvalidation_0-aucpr:0.94914\n",
      "[10]\tvalidation_0-aucpr:0.94914\n",
      "[11]\tvalidation_0-aucpr:0.95089\n",
      "[12]\tvalidation_0-aucpr:0.94393\n",
      "[13]\tvalidation_0-aucpr:0.94393\n",
      "[14]\tvalidation_0-aucpr:0.93530\n",
      "[15]\tvalidation_0-aucpr:0.93330\n",
      "[16]\tvalidation_0-aucpr:0.93074\n",
      "[17]\tvalidation_0-aucpr:0.93330\n",
      "[18]\tvalidation_0-aucpr:0.93573\n",
      "[19]\tvalidation_0-aucpr:0.93573\n",
      "[20]\tvalidation_0-aucpr:0.93330\n",
      "[21]\tvalidation_0-aucpr:0.93330\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-4 {color: black;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n",
       "              colsample_bylevel=None, colsample_bynode=None,\n",
       "              colsample_bytree=None, device=None, early_stopping_rounds=10,\n",
       "              enable_categorical=False, eval_metric=&#x27;aucpr&#x27;, feature_types=None,\n",
       "              gamma=None, grow_policy=None, importance_type=None,\n",
       "              interaction_constraints=None, learning_rate=None, max_bin=None,\n",
       "              max_cat_threshold=None, max_cat_to_onehot=None,\n",
       "              max_delta_step=None, max_depth=None, max_leaves=None,\n",
       "              min_child_weight=None, missing=nan, monotone_constraints=None,\n",
       "              multi_strategy=None, n_estimators=None, n_jobs=None,\n",
       "              num_parallel_tree=None, random_state=None, ...)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">XGBClassifier</label><div class=\"sk-toggleable__content\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n",
       "              colsample_bylevel=None, colsample_bynode=None,\n",
       "              colsample_bytree=None, device=None, early_stopping_rounds=10,\n",
       "              enable_categorical=False, eval_metric=&#x27;aucpr&#x27;, feature_types=None,\n",
       "              gamma=None, grow_policy=None, importance_type=None,\n",
       "              interaction_constraints=None, learning_rate=None, max_bin=None,\n",
       "              max_cat_threshold=None, max_cat_to_onehot=None,\n",
       "              max_delta_step=None, max_depth=None, max_leaves=None,\n",
       "              min_child_weight=None, missing=nan, monotone_constraints=None,\n",
       "              multi_strategy=None, n_estimators=None, n_jobs=None,\n",
       "              num_parallel_tree=None, random_state=None, ...)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "XGBClassifier(base_score=None, booster=None, callbacks=None,\n",
       "              colsample_bylevel=None, colsample_bynode=None,\n",
       "              colsample_bytree=None, device=None, early_stopping_rounds=10,\n",
       "              enable_categorical=False, eval_metric='aucpr', feature_types=None,\n",
       "              gamma=None, grow_policy=None, importance_type=None,\n",
       "              interaction_constraints=None, learning_rate=None, max_bin=None,\n",
       "              max_cat_threshold=None, max_cat_to_onehot=None,\n",
       "              max_delta_step=None, max_depth=None, max_leaves=None,\n",
       "              min_child_weight=None, missing=nan, monotone_constraints=None,\n",
       "              multi_strategy=None, n_estimators=None, n_jobs=None,\n",
       "              num_parallel_tree=None, random_state=None, ...)"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clf_xgb.fit(\n",
    "    X_train, \n",
    "    y_train, \n",
    "    eval_set=[(X_test, y_test)], \n",
    "    verbose=True\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "54a22316-77b8-47aa-8b2d-262c72496906",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred_proba = clf_xgb.predict_proba(X_test)[:, 1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "8778d554-ca02-4bd9-934c-8d822022e611",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred = clf_xgb.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "225f45f0-fa17-4a54-bfd6-dd8855b2c090",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ROC-AUC: 0.7738095238095237\n"
     ]
    }
   ],
   "source": [
    "roc_auc = roc_auc_score(y_test, y_pred_proba)\n",
    "print(f'ROC-AUC: {roc_auc}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "1c182d47-4b7a-4912-ac87-1b76782e74a9",
   "metadata": {},
   "outputs": [],
   "source": [
    "cm = confusion_matrix(y_test, y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "5f6403ff-5925-43d1-8944-ebda1a44227b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x23886652790>"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=[\"Default\", \"Not default\"])\n",
    "disp.plot(values_format='d')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "a4ee157b-4fdf-44e0-8d78-58405c80515f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.969271  , 0.9562276 , 0.907357  , 0.85698354, 0.9772942 ,\n",
       "       0.87996364, 0.63242376, 0.9705685 , 0.932725  , 0.9846615 ,\n",
       "       0.9716456 , 0.9846615 , 0.9742511 , 0.894379  , 0.9797925 ,\n",
       "       0.74708664, 0.9853071 , 0.6937652 , 0.40361032, 0.95885706,\n",
       "       0.97913194, 0.9674219 , 0.93110985, 0.834386  , 0.7367187 ],\n",
       "      dtype=float32)"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred_proba"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fad989a7-745c-489c-87be-31f67face576",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f4522ecc-ea1e-40cb-8a35-4d48e45a891e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cde81954-461a-48f6-89cb-5d7dbc4bbda1",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
